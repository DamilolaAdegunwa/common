@{
    ViewData["Title"] = "Client 2";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Client 2.</p>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
<script>
    /*
    {
      "username": "example.user@example.com",
      "password": "password"
    }
     */
    const connection = new signalR.HubConnectionBuilder()
        //.withUrl("/chathub")
        .withUrl("https://localhost:44300/ChatHub",
            { accessTokenFactory: () => `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEwMDU0IiwibmFtZSI6ImV4YW1wbGUudXNlckBleGFtcGxlLmNvbSIsImVtYWlsIjoiZXhhbXBsZS51c2VyQGV4YW1wbGUuY29tIiwibmJmIjoxNjI3NjUzMjQ3LCJleHAiOjE2Mjc4MzMyNDcsImlzcyI6IkVraUhpcmUuQXBpIiwiYXVkIjoiRWtpSGlyZS5XZWIifQ.__w753QFx37TEnoZYaH7RAYaOSgQXC5weAv82dg3R0o` })
        .configureLogging(signalR.LogLevel.Information)
        .withAutomaticReconnect()
        .build();

    connection.on("ReceiveMessage", (message) => {
        console.log("from receive message::", message)
    });


    async function start() {
        try {
            await connection.start();
            console.log("SignalR Connected.");
        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    };

    connection.onreconnecting(error => {
        console.log("onreconnecting:: ", error);
    });

    connection.onreconnected(connectionId => {
        console.log("onreconnected:: ", connectionId);
    });

    connection.onclose(async () => {
        console.log("onclose called");
        await start();
    });

    // Start the connection.
    start();
    try {
        await connection.invoke("SendMessage", message);
    } catch (err) {
        console.error(err);
    }
</script>